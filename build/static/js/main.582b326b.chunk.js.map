{"version":3,"sources":["ApolloClient/client.ts","Lists.tsx","AppHeader.tsx","App.tsx","index.tsx"],"names":["httpLink","HttpLink","uri","headers","client","ApolloClient","cache","InMemoryCache","link","ApolloLink","from","CLIENT_LIST","gql","vipEl","con","Text","style","fontWeight","getFormattedDate","stringDate","Date","toLocaleDateString","toString","ListOfCustomers","navigate","useNavigate","useQuery","data","loading","error","Spinner","Table","className","alignSelf","TableHeader","TableRow","TableCell","scope","border","TableBody","client_list","map","id","client_name","date_of_birth","vip","orders_aggregate","cursor","onClick","aggregate","count","ListOfOrders","paramValue","URLSearchParams","window","location","search","get","ORDER_LIST","clientDyn","Box","gap","justify","Card","direction","margin","background","CardHeader","pad","Avatar","User","CardBody","sum","sum_of_products","price","orders","order_date","AppHeader","appName","appIcon","tag","align","elevation","responsive","vertical","position","Button","flex","left","Heading","level","right","theme","global","colors","brand","font","family","size","height","App","Grommet","full","ApolloProvider","ResponsiveContext","Consumer","fill","to","Home","horizontal","overflow","path","element","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.582b326b.chunk.js","sourcesContent":["import {\n  ApolloClient, ApolloLink, HttpLink, InMemoryCache,\n} from '@apollo/client';\n\nconst httpLink = new HttpLink({\n  uri: 'https://actual-stud-78.hasura.app/v1/graphql',\n  headers: {\n    'content-type': 'application/json',\n    'x-hasura-admin-secret': 'GjXVwnbaza3HI1oNcIofwJTFcJyz157gtzg13uAdaZF83xbTedOtX8mGnzRHZ8rh',\n  },\n});\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([httpLink]),\n});\n\nexport default client;\n","import {\n  Table, TableHeader, TableRow, TableCell, TableBody,\n  Spinner, Box, Avatar,\n  CardHeader, CardBody, Card, Text,\n} from 'grommet';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery, gql } from '@apollo/client';\nimport './Lists.css';\nimport { User } from 'grommet-icons';\n\nconst CLIENT_LIST = gql`\nquery GetClientList {\n  client_list {\n    id\n    client_name\n    date_of_birth\n    vip\n    orders_aggregate {\n      aggregate {\n        count\n      }\n    }\n  }\n}\n`;\n\ninterface OrdersList {\n  'client_id': number,\n  'id': number,\n  'order_date': string,\n  'price': string,\n  'sum_of_products': number\n}\n\ninterface ClientsList {\n  'id': number,\n  'client_name': string,\n  'date_of_birth': string,\n  'vip': boolean,\n  'orders': Array<OrdersList>,\n  'orders_aggregate': {\n    'aggregate': {\n      'count': number,\n      'sum': {\n        'price': string,\n        'sum_of_products': number\n      }\n    }\n  }\n}\n\ninterface CustomersList {\n  'client_list': Array<ClientsList>\n}\n\nconst vipEl = (con: boolean) =>{\n  if (con) {\n    return <Text style={{ fontWeight: 'bold' }}>VIP</Text>;\n  }\n};\n\n\nfunction getFormattedDate(stringDate: string): string {\n  const date = new Date(stringDate);\n  return date.toLocaleDateString().toString();\n}\n\nfunction ListOfCustomers(): React.ReactElement {\n  const navigate = useNavigate();\n  const { data, loading, error } = useQuery<CustomersList>(CLIENT_LIST);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (error) {\n    return <Text>{error}</Text>;\n  }\n\n  return (\n    <Table className=\"mainTable\" alignSelf=\"stretch\">\n      <TableHeader>\n        <TableRow>\n          <TableCell scope=\"col\" border=\"bottom\">\n            Client ID\n          </TableCell>\n          <TableCell scope=\"col\" border=\"bottom\">\n            Customer\n          </TableCell>\n          <TableCell scope=\"col\" border=\"bottom\">\n            Date of birth\n          </TableCell>\n          <TableCell scope=\"col\" border=\"bottom\">\n            Vip\n          </TableCell>\n          <TableCell scope=\"col\" border=\"bottom\">\n            Sum of orders\n          </TableCell>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {data.client_list.map(({\n          id, client_name, date_of_birth, vip, orders_aggregate,\n        }) => (\n          <TableRow\n            key={id}\n            style={{ cursor: 'pointer' }}\n            className=\"mainTableRow\"\n            onClick={() => {\n              navigate(`/orders?id=${id}`);\n            }}\n          >\n            <TableCell scope=\"row\">\n              {id}\n            </TableCell>\n            <TableCell scope=\"row\">\n              <strong>{client_name}</strong>\n            </TableCell>\n            <TableCell>{getFormattedDate(date_of_birth)}</TableCell>\n            <TableCell>{vip ? '✅' : '❌'}</TableCell>\n            <TableCell>{orders_aggregate.aggregate.count}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n\nfunction ListOfOrders(): React.ReactElement {\n  const paramValue = new URLSearchParams(window.location.search).get('id');\n  const ORDER_LIST = gql`\n  query GetOrderList {\n    client_list(where: {id: {_eq: ${paramValue}}}) {\n      client_name\n      date_of_birth\n      id\n      vip\n      orders {\n        client_id\n        id\n        order_date\n        price\n        sum_of_products\n      }\n      orders_aggregate {\n        aggregate {\n          count\n          sum {\n            price\n            sum_of_products\n          }\n        }\n      }\n    }\n  }\n`;\n\n  const { data, loading, error } = useQuery<CustomersList>(ORDER_LIST);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  const client = data.client_list[0];\n  const clientDyn = data.client_list[0].orders_aggregate.aggregate;\n  return (\n    <Box gap=\"medium\" alignSelf=\"stretch\" justify=\"between\">\n      <Card direction=\"row\" margin=\"small\" background=\"light-1\">\n        <CardHeader pad=\"small\" justify=\"start\">\n          <Avatar background=\"accent-4\">\n            <User />\n          </Avatar>\n          <Text alignSelf=\"center\">{client.client_name}</Text>{vipEl(client.vip)}\n        </CardHeader>\n        <CardBody pad=\"small\" direction=\"row\">\n          <Text alignSelf=\"center\" margin=\"small\">\n            {`Id: ${client.id}`}\n          </Text>\n          <Text alignSelf=\"center\" margin=\"small\">\n            {`Date of birth: ${getFormattedDate(client.date_of_birth)}`}\n          </Text>\n          <Text alignSelf=\"center\" margin=\"small\">\n            {`Orders: ${clientDyn.count}`}\n          </Text>\n          <Text alignSelf=\"center\" margin=\"small\">\n            {`Products: ${clientDyn.sum.sum_of_products}`}\n          </Text>\n          <Text alignSelf=\"center\" margin=\"small\">\n            {`Lifetime spendings: ${clientDyn.sum.price}`}\n          </Text>\n\n        </CardBody>\n      </Card>\n      <Table className=\"mainTable\" alignSelf=\"stretch\">\n        <TableHeader>\n          <TableRow>\n            <TableCell scope=\"col\" border=\"bottom\">\n              ID\n            </TableCell>\n            <TableCell scope=\"col\" border=\"bottom\">\n              Date of order\n            </TableCell>\n            <TableCell scope=\"col\" border=\"bottom\">\n              Price\n            </TableCell>\n            <TableCell scope=\"col\" border=\"bottom\">\n              Products\n            </TableCell>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {data.client_list[0].orders.map(({\n            id, order_date, price, sum_of_products,\n          }) => (\n            <TableRow\n              key={id}\n              className=\"mainTableRow\"\n            >\n              <TableCell scope=\"row\">\n                {id}\n              </TableCell>\n              <TableCell scope=\"row\">\n                <strong>{getFormattedDate(order_date)}</strong>\n              </TableCell>\n              <TableCell>{price}</TableCell>\n              <TableCell>{sum_of_products}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Box>\n  );\n}\n\nexport { ListOfCustomers, ListOfOrders };\n","import { Avatar, Box, Button, Heading } from 'grommet';\n\ninterface Props {\n  appName: string,\n  appIcon: JSX.Element,\n}\n\nexport const AppHeader = ({\n  appName,\n  appIcon,\n}: Props): JSX.Element => (\n    <Box\n        tag=\"header\"\n        direction=\"row\"\n        background=\"brand\"\n        align=\"center\"\n        elevation=\"medium\"\n        justify=\"between\"\n        responsive={false}\n        pad={{ vertical: 'xsmall' }}\n        style={{ position: 'relative' }}\n    >\n        <Button>\n            <Box\n                flex={false}\n                direction=\"row\"\n                align=\"center\"\n                margin={{ left: 'small' }}\n            >\n                {appIcon}\n                <Heading level=\"4\" margin={{ left: 'small', vertical: 'none' }}>\n                    {appName}\n                </Heading>\n            </Box>\n        </Button>\n\n        <Box direction=\"row\" align=\"center\" margin={{ right: 'medium' }} style={{ cursor: 'pointer' }}>\n            <Avatar background=\"#ffb3b3\">\n                🤖\n            </Avatar>\n            <Heading level=\"5\" margin={{ left: 'small', vertical: 'none' }}>\n                John Wireman\n            </Heading>\n        </Box>\n    </Box>\n);","import React, { Component } from 'react';\nimport {\n  Link,\n  Route, Routes,\n} from 'react-router-dom';\nimport {\n  Box,\n  Grommet,\n  ResponsiveContext,\n} from 'grommet';\nimport { Home } from 'grommet-icons';\nimport { ApolloProvider } from '@apollo/client';\nimport client from './ApolloClient/client';\nimport { ListOfCustomers, ListOfOrders } from './Lists';\nimport './App.css';\nimport { AppHeader } from './AppHeader';\n\nconst theme = {\n  global: {\n    colors: {\n      brand: '#bb454e',\n    },\n    font: {\n      family: 'Roboto',\n      size: '14px',\n      height: '20px',\n    },\n  },\n};\n\nclass App extends Component {\n  render(): JSX.Element {\n    return (\n      <Grommet theme={theme} full>\n        <ApolloProvider client={client}>\n          <ResponsiveContext.Consumer>\n            {() => (\n              <Box fill>\n                <AppHeader\n                  appName=\"Customer's sheet\"\n                  appIcon={<Link to=\"/\"><Home /></Link>}\n                />\n                <Box flex margin={{ horizontal: 'large' }} overflow={{ horizontal: 'hidden' }} align=\"center\" justify=\"start\" className=\"main\">\n                  <Routes>\n                    <Route path=\"/\" element={<ListOfCustomers />} />\n                    <Route path=\"orders\" element={<ListOfOrders />} />\n                  </Routes>\n                </Box>\n              </Box>\n            )}\n          </ResponsiveContext.Consumer>\n        </ApolloProvider>\n      </Grommet >\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}